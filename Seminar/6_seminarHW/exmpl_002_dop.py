# Задача XO необязательная.
# Сделайте игру крестики - нолики, 
# человек должен играть с ботом, поле 3*3.
# Конечно, бот не должен ходить на занятые поля
# Если есть желание, то можете наделить бота псевдоинтеллектом,
# чтоб он ходил как можно ближе к своим занятым клеткам
# После каждого хода на экран должна выводиться текущая обстановка на поле.
# Например,
# |     |  Х | 
# |     |  O |
# |     |  O |
# При ходе пользователя у надо спрашивать номер строки и столбца, куда он хочет сделать ход

# field =[['|','_','|','_','|','_','|'], ['|','_','|','_','|','_','|'], ['|','_','|','_','|','_','|']]
# for x in field:
#     for i in x:
#         print(i, end =' ')
#     print()       

# Инициализация карты
maps = [1,2,3,
        4,5,6,
        7,8,9]
 
# Инициализация победных линий
victories = [[0,1,2],
             [3,4,5],
             [6,7,8],
             [0,3,6],
             [1,4,7],
             [2,5,8],
             [0,4,8],
             [2,4,6]]
 
# Вывод карты на экран
def print_maps():
    print(maps[0],)
    print(maps[1],)
    print(maps[2])
 
    print(maps[3], )
    print(maps[4], )
    print(maps[5])
 
    print(maps[6], )
    print(maps[7], )
    print(maps[8]) 

# # Вывод карты на экран
# def print_maps():
#     print(maps[0], end = ' ')
#     print(maps[1], end = ' ')
#     print(maps[2])
 
#     print(maps[3], end = ' ')
#     print(maps[4], end = ' ')
#     print(maps[5])
 
#     print(maps[6], end = ' ')
#     print(maps[7], end = ' ')
#     print(maps[8]) 