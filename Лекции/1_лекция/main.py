# # _______интерполяция обьединение строк______________

# a =5
# b = 5.89
# c = 'hello'
# print (f"{a} - {b} - {c}")


# # или

# print ("{} - {} - {} ".format(a, b, c))





# #_______ввод данных______________

# print ('Введите первое число: ')
# a = input()

# b = input('Введите второе число: ')
# print (a)

# # _________сумма чисел_________


# print ('Введите первое число: ')
# a = input()

# b = input('Введите второе число: ')
# print (a, '+', b, '=', a+b)

# # _______приведение типов____


# c= 5.8
# print(c)
# print(type(c))

# c=int(c)
# print(c)
# print(type(c))




# # ______сумма чисел ВЕРНО_________

# print ('Введите первое число: ')
# a = int(input())

# b = int(input('Введите второе число: '))
# print (a, '+', b, '=', a+b)



# #_____округление после запятой______

# a = 5.84353
# b = 7.468418
# print(round(a*b,3))

# # __сокращенное присваивание ___ вместо i++

# iter = 2
# iter += 3 # iter = iter + 3
# iter -= 4 # iter = iter - 4
# iter *= 5 # iter = iter * 5
# iter /= 5 # iter = iter / 5
# iter //= 5 # iter = iter // 5
# iter %= 5 # iter = iter % 5
# iter **= 5 # iter = iter ** 5


# ____тренировка___


# a = 1 > 4
# print(a) # False

# a = 1 < 4 and 5 > 2
# print(a) # True

# a = 1 == 2
# print(a) # False

# a = 1 != 2
# print(a) # True

# # можно равнивать не только числа но и строки 

# a = 'qwe'
# b = 'qwe'
# print(a == b) # True

# # тройные и даже четверные неравенства:
# a = 1 < 3 < 5 < 10
# print (a) # True


# # ______отступы________

# if condition:
# # operator 1
# # operator 2
# # ...
# # operator n
# else:
# # operator n + 1
# # operator n + 2
# # ...
# # operator n + m



# a = int(input(“a = “))
# b = int(input(“b = “))
# if a > b:
# print(a)
# else:
# print(b)


# ____использования операторов else-if → в связке с elif (else if)____________
# Как только будет найдено верное условие, все остальные будут игнорироваться.

# if condition1:
# # operator
# elif condition2:
# # operator
# elif condition3:
# # operator
# else:
# # operator


# # __________пример кода_______

username = input('Введите имя: ')
if username == 'Маша':
    print('Ура, это же МАША!')
elif username == 'Марина':
    print('Я так ждала Вас, Марина!')
elif username == 'Ильнар':
    print('Ильнар - топ)')
else:
    print('Привет, ', username)


# # __________________сложные условия  логических операторов, таких как: and, or,not_____________

# if condition1 and condition2: # выполнится, когда оба условия окажутся верными
# # operator
# if condition3 or condition4: # выполнится, когда хотя бы одно из условий
# окажется верным
# # operator


# n = int(input())
# if n % 2 == 0 and n % 3 == 0:
# print('Число кратно 6')
# if n % 5 == 0 and n % 3 == 0:
# print('Число кратно 15')



# #____________цикл WHILE__

# while condition:
# # operator 1
# # operator 2
# # ...
# # operator n
# while condition:
# # operator 1
# # operator 2
# # ...
# # operator n

# # ____управляющие конструкции________

# while condition:
# # operator 1
# # operator 2
# # ...
# # operator n
# else:
# # operator n + 1
# # operator n + 2
# # ...
# # operator n + m

# # __________else  конструкция break_______________

# i = 0
# while i < 5:
# if i == 3:
# break
# i = i + 1
# else:
# print('Пожалуй')
# print('хватит )')
# print(i)

# # __________________Пример программного кода без использования break:_____________________

# n = 423
# summa = 0
# while n > 0:
# x = n % 10
# summa = summa + x
# n = n // 10
# else:
# print('Пожалуй')
# print('хватит )')
# print(summa)
# # Пожалуй
# # хватит )
# # 9

# """ ____Задача:__________________
# Пользователь вводит число, 
# необходимо найти 
# минимальный делитель
# данного числа"""

# n = int(input())
# flag = True
# i = 2
# while flag:
# if n % i == 0: # если остаток при делении числа n на i равен 0
# flag = False
# print(i)
# elif i > n // 2: # делить числа не может превышать введенное число, деленное
# на 2
# print(n)
# flag = False
# i += 1

# # _______Пример использования цикла for:_________

# for i in enumeration:
# # operator 1
# # operator 2
# # ...
# # operator n
# for i in 1, -2, 3, 14, 5:
# print(i)
# # 1 -2 3 15 5


# """Range_____________________________________________
# ● Range выдает значения из диапазона с шагом 1.
# ● Если указано только одно число — от 0 до заданного числа.
# ● Если нужен другой шаг, третьим аргументов можно задать приращение.
# """
# r = range(5) # 0 1 2 3 4
# r = range(2, 5) # 2 3 4
# r = range(-5, 0) # ----
# r = range(1, 10, 2) # 1 3 5 7
# r = range(100, 0, -20) # 100 80 60 40 20
# r = range(100, 0, -20) # range(100, 0, -20)
# for i in r:
# print(i)
# # 100 80 60 40 20
# for i in range(5):
# print(i)
# # 0 1 2 3 4

# """Можно использовать цикл for() и со строками, так как у строк есть нумерация, такая
# же как и у массивов, начинается с 0:
# """
# for i in 'qwerty':
# print(i)
# # q
# # w
# # e
# # r
# # t
# # y


# # _Можно использовать вложенные циклы: ___________________

# line = ""
# for i in range(5):
# line = ""
# for j in range(5):
# line += "*"
# print(line)



# # Команды для работы со строками:_____________________

# text = 'СъЕШЬ ещё этих МяГкИх французских булок'
# # 1. Определить количество символов в строке:
# print(len(text)) # 39
# # 2. Проверить наличие символа в строке (in):
# print('ещё' in text) # True
# # 3. Функция, которая делает все буквы строки маленькими:
# print(text.lower()) # съешь ещё этих мягких французских булок
# # 4. Функция, которая делает все буквы строки большими:
# print(text.upper()) # СЪЕШЬ ЕЩЁ ЭТИХ МЯГКИХ ФРАНЦУЗСКИХ БУЛОК
# # 5. Заменить слово на другое :
# print(text.replace('ещё','ЕЩЁ')) # СъЕШЬ ЕЩЁ этих МяГкИх французских булок



"""Срезы__________________________________________________________________________
● Мы представляем строку в виде массива символов. Значит мы можем
обращаться к элементам по индексам.
● Отрицательное число в индексе — счёт с конца строки
"""

# # ● Отрицательное число в индексе — счёт с конца строки
# text = 'съешь ещё этих мягких французских булок'
# print(text[0]) # c
# print(text[1]) # ъ
# print(text[len(text)-1]) # к
# print(text[-5]) # б
# print(text[:]) # съешь ещё этих мягких французских булок
# print(text[:2]) # съ
# print(text[len(text)-2:]) # ок
# print(text[2:9]) # ешь ещё
# print(text[6:-18]) # ещё этих мягких
# print(text[0:len(text):6]) # сеикакл
# print(text[::6]) # сеикакл
# text = text[2:9] + text[-5] + text[:2] # ...

